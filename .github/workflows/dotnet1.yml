# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Dependency Check
  # You may pin to the exact commit or the version.
  # uses: dependency-check/Dependency-Check_Action@75ba02d6183445fe0761d26e836bde58b1560600
      uses: dependency-check/Dependency-Check_Action@1.1.0
      with:
        project: '*.csproj'
        path: '.'
        format: 'HTML'
    - name: Upload Test results
      uses: actions/upload-artifact@master
      with:
         name: Depcheck report
         path: ${{github.workspace}}/reports
     
      
  semgrep:
      name: semgrep/ci
      runs-on: ubuntu-20.04
      env:
        SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
      container:
        image: semgrep/semgrep
      if: (github.actor != 'dependabot[bot]')
      steps:
        - uses: actions/checkout@v4
        - run: semgrep ci
  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with: {fetch-depth: 0}
  
      - name: Check for GitLeaks
        uses: gacts/gitleaks@v1
        #id: gitleaks
        #with:
        #  version: latest
        #  config-path: .github/.gitleaks.toml
        #  path: any/directory/path
  
      #- if: ${{ always() }} # reason - https://github.com/gitleaks/gitleaks/issues/782
      #  uses: github/codeql-action/upload-sarif@v2
      #  with:
      #    sarif_file: ${{ steps.gitleaks.outputs.sarif }}
  destardly:
    runs-on: ubuntu-latest
    steps:
    - name: Run Dastardly Action Step
      uses: PortSwigger/dastardly-github-action@main
      with:
        target-url: 'https://ginandjuice.shop'
  owaspZap:
    runs-on: ubuntu-latest
    steps:
    - name: ZAP Scan
      uses: zaproxy/action-baseline@v0.13.0
      with:
        target: 'https://ginandjuice.shop'
      #
      
